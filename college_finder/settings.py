"""
Django settings for college_finder project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url # Import karein
# --- Consider using python-dotenv for security ---
# import dotenv 

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



# --- Load environment variables if using dotenv ---
# dotenv.load_dotenv(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# --- Best practice: Load SECRET_KEY from environment variables ---
# SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'your-default-insecure-key-here')
SECRET_KEY = 'django-insecure-nui!_94y58u9c2s87hah&$y-476*zim%4pp97!t_hwb(jr-18u' # Keep for now if needed

# SECURITY WARNING: don't run with debug turned on in production!
# settings.py
DEBUG = False # Production mein False rakhein
ALLOWED_HOSTS = ['.onrender.com'] # Render ka domain

# Kuch Recommended Security Settings (HTTPS ke liye)
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
SECURE_SSL_REDIRECT = True


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # My Apps
    'colleges.apps.CollegesConfig',
    'users.apps.UsersConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
'whitenoise.middleware.WhiteNoiseMiddleware', # Yahan add karein
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'college_finder.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'college_finder.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(
        # Agar local mein SQLite use karna hai toh default set karein
        default=f"sqlite:///{os.path.join(BASE_DIR, 'db.sqlite3')}",
        conn_max_age=600 # Optional
    )
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    { 'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC' # Consider changing to 'Asia/Kolkata' if needed
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Media files (User-uploaded images)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# --- Authentication Settings (Defined ONCE) ---
LOGIN_URL = 'login'          # The URL *name* of your login page
LOGIN_REDIRECT_URL = 'home'  # The URL *name* to redirect to after successful login
LOGOUT_REDIRECT_URL = 'home' # The URL *name* to redirect to after logout






# Gmail SMTP Configuration (Less Secure - Use environment variables in production)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'mailsahu321@gmail.com' # Your Gmail address

EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD', 'qmrr zorv xikc eicl') # Load from .env or system
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# --- Define Admins to Receive Feedback Emails ---
ADMINS = [
    ('Saransh Sahu', 'mailsahu321@gmail.com'), # Replace with your actual name and email
    # ('Another Admin', 'another@example.com'),
]
MANAGERS = ADMINS # Usually the same as ADMINS

# --- Recommended: Set Default From Email if using SMTP ---
# DEFAULT_FROM_EMAIL = EMAIL_HOST_USER # Set this if using SMTP above


# settings.py
# ... STATIC_URL ke paas ...

STATIC_URL = 'static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')] # Aapka development static folder

# Yahan par collectstatic files jama karega deployment ke liye
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# WhiteNoise ke liye Storage (Django 4.2+ ke liye)
STORAGES = {
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}
# Agar Django 4.2 se purana hai toh yeh use karein:
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

SECRET_KEY = os.environ.get('SECRET_KEY', 'default-dev-key')